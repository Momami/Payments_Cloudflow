blueprint {
    streamlets {
        file-payments-ingress = payments.ingress.FilePaymentsIngress
        participant-initialize-ingress = payments.ingress.ParticipantInitializeIngress
        payment-logging-egress = payments.egress.PaymentLoggingEgress
        payment-checking-streamlet = payments.checker.PaymentCheckingStreamlet
        payment-processing-streamlet = payments.process.PaymentProcessingStreamlet
    }
    topics {
        participant-ingress {
          producers = [participant-initialize-ingress.out]
          consumers = [payment-processing-streamlet.in-participant]
        }
        payments-ingress {
          producers = [file-payments-ingress.out]
          consumers = [payment-checking-streamlet.in]
        }
        checking-records {
          producers = [payment-checking-streamlet.out]
          consumers = [payment-processing-streamlet.in-payment]
        }
        checking-invalid-logging {
          producers = [payment-checking-streamlet.out-logger, payment-processing-streamlet.out]
          consumers = [payment-logging-egress.in]
        }
    }
}